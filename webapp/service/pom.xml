<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>missioncontrol</artifactId>
        <groupId>com.eventhorizon.missioncontrol</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>service</artifactId>

    <packaging>war</packaging>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filter</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp-filter</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/${project.artifactId}-${project.version}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.0.0.M4</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webApp>
                        <contextPath>/missioncontrol</contextPath>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>${project.basedir}/src/main/webapp,${project.build.directory}/${project.artifactId}-${project.version}</resourcesAsCSV>
                        </baseResource>
                        <maxFormContentSize>500000</maxFormContentSize>
                        <jettyEnvXml>${project.build.outputDirectory}/jetty-env.xml</jettyEnvXml>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>grunt-build</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target name="building">
                                <echo>${uidir.pathname}
                                    ---------------------------------------------------
                                    --                  NPM INSTALL                  --
                                    ---------------------------------------------------
                                </echo>
                                <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                    <arg line="/c ${uidir.pathname}/nodejs/npm.cmd install"/>
                                </exec>
                                <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                    <arg line="-c '${nodejs.local.dir}/bin/node ${nodejs.local.dir}/lib/node_modules/npm/bin/npm-cli.js install'"/>
                                </exec>
                                <echo>${uidir.pathname}
                                    ---------------------------------------------------
                                    --                 BOWER INSTALL                 --
                                    ---------------------------------------------------
                                </echo>
                                <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                    <arg line="/c node.exe ${uidir.pathname}/node_modules/bower/bin/bower install"/>
                                </exec>
                                <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                    <arg line="-c '${nodejs.local.dir}/bin/node ${uidir.pathname}/node_modules/bower/bin/bower install'"/>
                                </exec>
                                <echo>${uidir.pathname}
                                    ---------------------------------------------------
                                    --                 WEBAPP INSTALL                 --
                                    ---------------------------------------------------
                                </echo>
                                <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows"
                                      resultproperty="cmdresult">
                                    <arg line="/c node.exe ${uidir.pathname}/node_modules/grunt-cli/bin/grunt --force"/>
                                </exec>
                                <exec executable="bash" dir="${uidir.pathname}" osfamily="unix"
                                      resultproperty="cmdresult">
                                    <arg line="-c '${nodejs.local.dir}/bin/node ${uidir.pathname}/node_modules/grunt-cli/bin/grunt'"/>
                                </exec>
                                <condition property="cmdsuccess">
                                    <equals arg1="${cmdresult}" arg2="0"/>
                                </condition>
                                <fail unless="cmdsuccess"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xmx4096m</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>install-nodejs</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${nodejs.local.dir}</directory>
                                </fileset>
                                <fileset>
                                    <directory>${uidir.pathname}</directory>
                                    <includes>
                                        <include>node.exe</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>extract-nodejs</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <outputDirectory>${uidir.pathname}</outputDirectory>
                                            <groupId>nodejs</groupId>
                                            <artifactId>node</artifactId>
                                            <classifier>${nodejs.classifier}</classifier>
                                            <type>zip</type>
                                            <includes>node-v*/**</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>nodejs-rename</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <move file="${uidir.pathname}/node-${nodejs.version}-${nodejs.classifier}" tofile="${nodejs.local.dir}"/>
                                        <chmod dir="${nodejs.local.dir}" includes="**/bin/*" perm="755" />
                                        <copy file="${nodejs.local.dir}/node.exe" tofile="${uidir.pathname}/node.exe" overwrite="true" failonerror="false"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pack-ui</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/ui/node_modules</directory>
                                </fileset>
                                <fileset>
                                    <directory>src/main/ui/vendor/bower</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/npm.xml</descriptor>
                                <descriptor>src/main/assembly/bower.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-npm.zip</file>
                                            <type>zip</type>
                                            <classifier>npm</classifier>
                                        </artifact>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-bower.zip</file>
                                            <type>zip</type>
                                            <classifier>bower</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>npm-bower-install</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <echo>**** NPM INSTALL ****</echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c ${uidir.pathname}/nodejs/npm.cmd install"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c '${nodejs.local.dir}/bin/node ${nodejs.local.dir}/lib/node_modules/npm/bin/npm-cli.js install'"/>
                                        </exec>
                                        <echo>**** BOWER INSTALL ****</echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c node.exe ${uidir.pathname}/node_modules/bower/bin/bower install"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c '${nodejs.local.dir}/bin/node ${uidir.pathname}/node_modules/bower/bin/bower install'"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>unpack-ui</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/ui/node_modules</directory>
                                </fileset>
                                <fileset>
                                    <directory>src/main/ui/vendor/bower</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>extract-js-dependencies</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <outputDirectory>src/main/ui</outputDirectory>
                                            <groupId>com.eventhorizon.missioncontrol</groupId>
                                            <artifactId>missioncontrol</artifactId>
                                            <classifier>npm</classifier>
                                            <type>zip</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <outputDirectory>src/main/ui/vendor</outputDirectory>
                                            <groupId>com.eventhorizon.missioncontrol</groupId>
                                            <artifactId>missioncontrol</artifactId>
                                            <classifier>bower</classifier>
                                            <type>zip</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <outputDirectory>${uidir.pathname}/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib</outputDirectory>
                                            <groupId>phantomjs</groupId>
                                            <artifactId>phantomjs</artifactId>
                                            <classifier>${phantomjs.classifier}</classifier>
                                            <type>zip</type>
                                            <includes>phantomjs-*/**</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>phantomjs-rename</id>
                                <phase>process-resources</phase>
                                <configuration>
                                    <target>
                                        <move file="${uidir.pathname}/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib/phantomjs-${phantomjs.version}-${phantomjs.classifier}" tofile="${phantomjs.local.dir}"/>
                                        <chmod dir="${uidir.pathname}/node_modules" includes="**/bin/*" perm="755" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>macos-x86</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>darwin-x86</nodejs.classifier>
                <phantomjs.classifier>macosx</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>macos-x64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>darwin-x64</nodejs.classifier>
                <phantomjs.classifier>macosx</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>win-x86</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>win-x86</nodejs.classifier>
                <phantomjs.classifier>windows</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>win-x64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>win-x64</nodejs.classifier>
                <phantomjs.classifier>windows</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x86</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x86</nodejs.classifier>
                <phantomjs.classifier>linux-x86_64</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x86-386</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x86</nodejs.classifier>
                <phantomjs.classifier>linux-i686</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x86-686</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>i686</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x86</nodejs.classifier>
                <phantomjs.classifier>linux-i686</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x64-x86_64</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x64</nodejs.classifier>
                <phantomjs.classifier>linux-x86_64</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x64-amd64</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x64</nodejs.classifier>
                <phantomjs.classifier>linux-x86_64</phantomjs.classifier>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.eventhorizon.missioncontrol</groupId>
            <artifactId>database</artifactId>
            <version>${project.parent.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-scala</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${commons-pool.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra_${scala.major.version}</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-specs2_${scala.major.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-json_2.10</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-scalate_${scala.major.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_2.10</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.eventhorizon.missioncontrol</groupId>
            <artifactId>missioncontrol</artifactId>
            <classifier>npm</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>com.eventhorizon.missioncontrol</groupId>
            <artifactId>missioncontrol</artifactId>
            <classifier>bower</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>nodejs</groupId>
            <artifactId>node</artifactId>
            <classifier>${nodejs.classifier}</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>phantomjs</groupId>
            <artifactId>phantomjs</artifactId>
            <classifier>${phantomjs.classifier}</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>
</project>